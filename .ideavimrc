" vim settings
set scrolloff=5
set history=1000

" status bar
set showmode

" leader
map <space> <nop>
let mapleader="\<space>"

" find and replace
set hlsearch
set incsearch
set ignorecase
set smartcase
set gdefault
nmap <leader>nh :noh<CR>
map <leader>o <Action>(GotoFile)
map <leader>f <Action>(Find)
map <leader>F <Action>(FindInPath)
"map s <Action>(AceAction)
map <D-j> <Action>(SelectNextOccurrence)

" ideavim settings
set ideajoin
set ideamarks
set idearefactormode=normal
set ideastatusicon=gray

" buffer (buffer < window < tab)
nmap <leader>xx <Action>(CloseContent)
nmap <leader>xa <Action>(CloseAllEditors)
nmap <leader>xo <Action>(CloseAllEditorsButActive)
nmap <leader>xp <Action>(CloseAllUnpinnedEditors)

" navigate between tabs
nnoremap <s-TAB> :action PreviousTab<CR>
nnoremap <TAB> :action NextTab<CR>

" window splitting/navigation mappings
nnoremap <Esc>i :action SplitVertically<CR>
nnoremap <Esc>- :action SplitHorizontally<CR>
nnoremap <Esc>= :action Unsplit<CR>
nnoremap <Esc>m :action MoveEditorToOppositeTabGroup<CR>
sethandler <leader>h a:vim
sethandler <leader>l a:vim
sethandler <leader>j a:vim
sethandler <leader>k a:vim
nmap <Esc>h <c-w>h
nmap <esc>l <c-w>l
nmap <esc>j <c-w>j
nmap <esc>k <c-w>k

" terminal
nnoremap <S-D-j> :action ActivateTerminalToolWindow<CR>
nmap <leader>tt <Action>(ActivateTerminalToolWinjjdow)
nmap <leader>tc <Action>(Terminal.OpennTerminal)

" goto
nmap gb <action>(Back)
nmap gf <action>(Forward)
nmap gd <action>(GotoDeclaration)
nmap gD <Action>(GotoTypeDecjlaration)
nmap gi <Action>(GotoImplementation)
nmap gI <Action>(QuickImplementations)
nmap gc <Action>(VcsShowNextChangeMarker)
nmap gC <Action>(VcsShowPrevChangeMarker)
nnoremap ge :action GotoNextError<CR>
nnoremap gE :action GotoPreviousError<CR>
nnoremap gt :action GotoTest<CR>

" bookmark
nmap mm <Action>(ToggleBookmark)
nmap ms <Action>(ShowBookmarks)
nmap mn <Action>(GotoNextBookmarkInEditor)

" vcs
nmap <leader>v <Action>(VcsGroups)

" undo and redo
nmap U <action>($Redo)
nnoremap <leader>gu :action Vcs.RollbackChangedLines<CR>

" rename
nmap <leader>rf <action>(RenameFile)
nmap <leader>re <action>(RenameElement)

" copilot
nmap <leader>cc <action>(copilot.chat.show)

" new file
nmap <leader>ne <action>(NewElement)
nmap <leader>nf <action>(NewFile)
nmap <leader>rf <action>(RenameFile)

" text-object (bundle plugin)
set vim-paragraph-motion
set textobj-indent
set argtextobj

" jump-motion (required idea plugin: IdeaVim-EasyMotion, AceJump)
set easymotion

" highlight yank (bundle plugin)
set highlightedyank

" string manipulate (required idea plugin: String Manipulation)
nmap <leader>ss <Action>(osmedile.intellij.stringmanip.PopupChoiceAction)

" surround (bundle plugin)
" usage: https://github.com/tpope/vim-surround
set surround

" exchange (bundle plugin)
" usage: https://github.com/tommcdo/vim-exchange
set exchange

" nerdtree (bundle plugin)
set NERDTree
nnoremap <leader>nc :NERDTreeFind<CR>

" sneak (Install IdeaVim-sneak plugin)
set sneak

" replace with register (bundle plugin)
" usage: https://github.com/vim-scripts/ReplaceWithRegister
set ReplaceWithRegister

" git
nmap <leader>gs <Action>(GitToolBox.SwitchRecentBranches)
